set(PROJECT_VENDOR "Eclipse Mosquitto")
set(CPACK_PROJECT_URL "https://github.com/eclipse/mosquitto")
set(CPACK_PACKAGE_VENDOR "Denis Kudia")
set(CPACK_PACKAGE_CONTACT "Denis Kudia <dkudja@gmail.com>")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Eclipse Mosquitto open source implementation of a server for version 5.0, 3.1.1, and 3.1 of the MQTT protocol.")

set(CPACK_INCLUDE_TOPLEVEL_DIRECTORY 0)
#set(CPACK_INSTALL_CMAKE_PROJECTS "${CMAKE_BINARY_DIR}" "${PROJECT_NAME}" ALL .)
set(CPACK_INSTALL_CMAKE_PROJECTS "${CMAKE_BINARY_DIR}/lib" "${PROJECT_NAME}" ALL .)

set(PROJECT_VERSION ${VERSION})
set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})

message( STATUS "PROJECT_NAME [${PROJECT_NAME}]")
message( STATUS "PROJECT_VERSION [${PROJECT_VERSION}]")
message( STATUS "VERSION [${VERSION}]")
message( STATUS "CPACK_PROJECT_VERSION [${CPACK_PROJECT_VERSION}]")
message( STATUS "CMAKE_BINARY_DIR [${CMAKE_BINARY_DIR}]")


# Generator name - Debian packages
set(CPACK_GENERATOR "DEB")
set(CPACK_PACKAGE_NAME ${PROJECT_NAME})

# package information
set(CPACK_PACKAGE_VENDOR ${PROJECT_VENDOR})
set(CPACK_PACKAGE_CONTACT ${PROJECT_VENDOR})
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "")
set(CPACK_DEBIAN_PACKAGE_MAINTAINER ${CPACK_PACKAGE_CONTACT})

# package version
set(CPACK_PACKAGE_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${PROJECT_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${PROJECT_VERSION_PATCH})
set(CPACK_PACKAGE_VERSION ${CPACK_PROJECT_VERSION})

message( STATUS "PROJECT_VERSION_MAJOR [${PROJECT_VERSION_MAJOR}]")
message( STATUS "CPACK_PACKAGE_VERSION [${CPACK_PACKAGE_VERSION}]")

IF(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")
    set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "amd64")
ELSE(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")
    set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "armhf") 
ENDIF(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")

set(CPACK_SYSTEM_NAME ${CMAKE_SYSTEM_NAME})
set(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_SYSTEM_NAME}-${CPACK_DEBIAN_PACKAGE_ARCHITECTURE})

include(CPack)
